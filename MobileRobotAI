// Product of Judah

/* Important Notes
  Different 'mobile robots' differ wildly.
  Your robot's ENL and/or ENR will be different.
  Your robot's IRThreshold's will differ depending on lighting and the surfaces used.
  This code was only tested on differing between black and white in a lit environment.
  My code is better than Sam's

*/

// // Motor Stuff // //
// LEFT Motor:
#define ENL 9
#define IN1 8
int IN2 = 7;

// RIGHT Motor:
int ENR = 3;
int IN3 = 5;
int IN4 = 4;


// // IR Sensor Stuff // //
// The Pins
#define Right_IR A0
#define Left_IR A5

// The Threshold
int IRThreshold_R = 100; // lower is detecting, higher is not.
int IRThreshold_L = 100; // lower is detecting, higher is not.

bool delaying = true;
int delayAmount = 150; // In MS, higher is slower, lower is faster.
int delayDriveAmount = 100; // In MS, higher is longer, lower is shorter, zero is no moving.

void Drive(){
// This inits
  analogWrite(ENL, 255); //0-255 
  analogWrite(ENR, 128); //0-255
}

void stopMotor(bool isDisabled){
//left motor
  digitalWrite(IN1, LOW);
  digitalWrite(IN2, LOW);

//right motor
  digitalWrite(IN3, LOW);
  digitalWrite(IN4, LOW);

//disable motor check
  if(isDisabled){
    digitalWrite(ENL, LOW);
    digitalWrite(ENR, LOW);
    enableMotors(false);
  }

}

void LineFollow(bool right, bool left){
  // Right Motor
  if (left){
    digitalWrite(IN2, LOW);
  }else{
    digitalWrite(IN2, HIGH);
  }

  // Left Motor
  if (right){
    digitalWrite(IN4, LOW);
  }else{
    digitalWrite(IN4, HIGH);
  }
}

bool ReadIR(bool f4lt4r){
// Returns the reading of either the Right or Left IR sensor.
if (f4lt4r){
  // Right IR
  int rightIRData = analogRead(Right_IR);
  Serial.print("R: ");
  Serial.println(rightIRData);
  if (rightIRData > IRThreshold_R){
    return true;
  }else{
    return false;
  }

}else{
  // Left IR
  int leftIRData = analogRead(Left_IR);
  Serial.print("L: ");
  Serial.println(leftIRData);
  if (leftIRData > IRThreshold_L){
    return true;
  }else{
    return false;
  }
}


Serial.println("You seriously messed up!");
return false;

}

void enableMotors(bool eeeee){

}

void setup(){
  
  pinMode(ENL, OUTPUT);
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  
  pinMode(ENR, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  
  Serial.begin(9600);
  Serial.println("Init!");
  
  Drive();

  enableMotors(true);
}

void loop(){
  if(delaying){
    stopMotor(false);
    delay(delayAmount);
  }

  //Drive(); //move forward

  bool right = ReadIR(true);
  bool left = ReadIR(false);

  if (delaying){
    LineFollow(right, left);
    delay(delayDriveAmount);
  }

  /*
  while(1){
      stopMotor(true); //stop forever
  }
  */
}
